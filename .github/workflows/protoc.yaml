name: "Protocol Buffer Go Stubs Generation"

# Set permissions for the workflow
permissions:
  contents: write  # Allow the workflow to push to the repository

on:
  push:
    branches:
      - '*'  # Trigger on push to any branch

jobs:
  protoc:
    name: "Generate"
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4  # Updated to v4

      # Step 2: Install Go
      - name: Install Go
        uses: actions/setup-go@v5  # Updated to v5
        with:
          go-version: 1.23

      # Step 3: Restore Go dependencies cache (only if go.sum exists)
      - name: Restore Go cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 4: Ensure go.mod and go.sum files are present and up to date
      - name: Set up Go dependencies
        run: |
          go mod tidy  # This command will ensure go.sum is created

      # Step 5: Generate Golang protobuf and gRPC code
      - name: "Generate for Golang"
        run: |
          sudo apt-get install -y protobuf-compiler golang-goprotobuf-dev
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          protoc --go_out=./golang --go_opt=paths=source_relative --go-grpc_out=./golang --go-grpc_opt=paths=source_relative ./**/*.proto
          cd golang
          go mod tidy

      # Step 6: Commit and Push Changes using the GITHUB_TOKEN
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically available GitHub token for authentication
        run: |
          git config --global user.email "traplord345@gmail.com"
          git config --global user.name "TrapLord92"
          git add .
          git commit -am "proto update"
          git push origin main
